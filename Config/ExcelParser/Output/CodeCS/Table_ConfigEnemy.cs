
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by Tools.ExcelParser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepEngine                                          
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  
using System;
using System.Collections.Generic;
using Lockstep.Serialization;
using Lockstep.Math;

namespace Lockstep.Game{
    public partial class Table_ConfigEnemy : TableData<Table_ConfigEnemy>
    {
        const string tableName = "ConfigEnemy";
        public override string Name() { return tableName; }               
        
        /// id
        public UInt16 asset;        
        /// 
        public LFloat aI_updateInterval;        
        /// 
        public LFloat aI_fireRate;        
        /// 
        public LFloat dropRate;        
        /// 
        public LFloat skill_cd;        
        /// 
        public Int32 skill_bulletId;        
        /// 
        public String unit_name;        
        /// 
        public Int32 unit_health;        
        /// 
        public Int32 unit_damage;        
        /// 
        public LFloat move_moveSpd;        
        /// 
        public LFloat move_maxMoveSpd;

        protected override void DoParseData(Deserializer reader){ 
            asset = reader.ReadUInt16(); 
            aI_updateInterval = reader.ReadLFloat(); 
            aI_fireRate = reader.ReadLFloat(); 
            dropRate = reader.ReadLFloat(); 
            skill_cd = reader.ReadLFloat(); 
            skill_bulletId = reader.ReadInt32(); 
            unit_name = reader.ReadString(); 
            unit_health = reader.ReadInt32(); 
            unit_damage = reader.ReadInt32(); 
            move_moveSpd = reader.ReadLFloat(); 
            move_maxMoveSpd = reader.ReadLFloat();
        }
    }
}