{
  "FileContent": [
    "\nusing System;                                                                                                ",
    "\nusing System.Collections.Generic;                                                                            ",
    "\nusing Lockstep.Serialization;                                                                                ",
    "\nusing Lockstep.Math;                                                                                ",
    "\nusing NetMsg.Common;                                                                                ",
    "\n//#DECLARE_BASE_TYPES                                                                                        ",
    "\n                                                                                                             ",
    "\n#if !DONT_USE_GENERATE_CODE                                                                                  ",
    "\n//#TYPES_EXTENSIONS                                                                                          ",
    "\n#endif                                                                                                       ",
    "\n  "
  ],

  "TypeHandler": [
    {
      "_defaultCodeTemplete": "\t{0}public {2} {1};",
      "_enumCodeTemplete":  "\t{0}public {2} {1};",
      "_clsCodeTemplete":  "\t{0}public {2} {1};",
      "_arrayCodeTemplete":  "\t{0}public {2}[] {1};",
      "_lstCodeTemplete":  "\t{0}public List<{2}>  {1};",
      "_dictCodeTemplete":  "\t{0}public {2} {1};"
    },
    {
      "_defaultCodeTemplete": "{0}public {2} {1} {{get => _curState.{1};set => _curState.{1} = value;}}",
      "_enumCodeTemplete": "{0}public {2} {1} {{get => _curState.{1};set => _curState.{1} = value;}}",
      "_clsCodeTemplete":  "{0}public {2} {1} {{get => _curState.{1};set => _curState.{1} = value;}}",
      "_arrayCodeTemplete":"{0}public {2}[] {1} {{get => _curState.{1};set => _curState.{1} = value;}}",
      "_lstCodeTemplete": "{0}public List<{2}>  {1} {{get => _curState.{1};set => _curState.{1} = value;}}",
      "_dictCodeTemplete": "{0}public {2} {1} {{get => _curState.{1};set => _curState.{1} = value;}}"
    },
    {
      "_defaultCodeTemplete": "{0}{2} {1} {{get; set; }}",
      "_enumCodeTemplete":    "{0}{2} {1} {{get; set; }}",
      "_clsCodeTemplete":     "{0}{2} {1} {{get; set; }}",
      "_arrayCodeTemplete":   "{0}{2}[] {1} {{get; set; }}",
      "_lstCodeTemplete":     "{0}List<{2}> {1} {{get; set; }}",
      "_dictCodeTemplete":    "{0}{2} {1} {{get; set; }}"
    }  
  ],
  "ClsCodeTemplate": [
    "\nnamespace Lockstep.Game{                                                                                              ",
    "\n   public partial interface IGameStateService  {                                                               ",             
    "\n#TYPE_HANDLE2                                                                                                  ",
    "\n   }                                                                                                                ",
    "\n}                                                                                                                ",
    "\nnamespace Lockstep.Game{                                                                                              ",
    "\n    public partial class GameStateService  {                                                                               ",
    "\n        private _State _curState = new _State();                                                                      ",                                                                                                                     
    "\n        public class CopyStateCmd : BaseCommand {                                                                     ",                                                                                                     
    "\n            private _State state;                                                                                     ",                                                           
    "\n            public override void Do(object param){                                                                    ",                                                                           
    "\n                state = ((GameStateService) param)._curState;                                                             ",                                                                                   
    "\n            }                                                                                                           ",                                     
    "\n                                                                                                                        ",                                 
    "\n            public override void Undo(object param){                                                                    ",                                                                           
    "\n                ((GameStateService) param)._curState = state;                                                           ",                                                                                     
    "\n            }                                                                                                           ",                                     
    "\n        }                                                                                                             ",                                   
    "\n        public override void Backup(int tick){                                                                        ",                                                                       
    "\n            cmdBuffer.Execute(tick, new CopyStateCmd());                                                                ",                                                                               
    "\n        }                                                                                                             ",                                   
    "\n        protected override FuncUndoCommands GetRollbackFunc(){                                                        ",                                                                                       
    "\n            return (minTickNode, maxTickNode, param) => { minTickNode.cmd.Undo(param); };                               ",                                                                                                                 
    "\n        }                                                                                                             ",                                   
    "\n        public struct _State {                                                                                       ",                                                         
    "\n#TYPE_HANDLE0                                                                                               ",                                                 
    "\n        }                                                                                                             ",
    "\n#TYPE_HANDLE1                                                                                               ",
    "\n   }                                                                                                             ",
    "\n}                                                                                                             "
  ]                                                                                                                                               
}