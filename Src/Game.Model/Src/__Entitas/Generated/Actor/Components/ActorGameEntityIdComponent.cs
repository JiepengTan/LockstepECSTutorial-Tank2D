//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ActorEntity {

    public Lockstep.ECS.Actor.GameEntityIdComponent gameEntityId { get { return (Lockstep.ECS.Actor.GameEntityIdComponent)GetComponent(ActorComponentsLookup.GameEntityId); } }
    public bool hasGameEntityId { get { return HasComponent(ActorComponentsLookup.GameEntityId); } }

    public void AddGameEntityId(uint newValue) {
        var index = ActorComponentsLookup.GameEntityId;
        var component = (Lockstep.ECS.Actor.GameEntityIdComponent)CreateComponent(index, typeof(Lockstep.ECS.Actor.GameEntityIdComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameEntityId(uint newValue) {
        var index = ActorComponentsLookup.GameEntityId;
        var component = (Lockstep.ECS.Actor.GameEntityIdComponent)CreateComponent(index, typeof(Lockstep.ECS.Actor.GameEntityIdComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameEntityId() {
        RemoveComponent(ActorComponentsLookup.GameEntityId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ActorMatcher {

    static Entitas.IMatcher<ActorEntity> _matcherGameEntityId;

    public static Entitas.IMatcher<ActorEntity> GameEntityId {
        get {
            if (_matcherGameEntityId == null) {
                var matcher = (Entitas.Matcher<ActorEntity>)Entitas.Matcher<ActorEntity>.AllOf(ActorComponentsLookup.GameEntityId);
                matcher.componentNames = ActorComponentsLookup.componentNames;
                _matcherGameEntityId = matcher;
            }

            return _matcherGameEntityId;
        }
    }
}
