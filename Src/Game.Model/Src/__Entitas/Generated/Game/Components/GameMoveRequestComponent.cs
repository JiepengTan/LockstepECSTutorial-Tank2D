//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Lockstep.ECS.Game.MoveRequestComponent moveRequest { get { return (Lockstep.ECS.Game.MoveRequestComponent)GetComponent(GameComponentsLookup.MoveRequest); } }
    public bool hasMoveRequest { get { return HasComponent(GameComponentsLookup.MoveRequest); } }

    public void AddMoveRequest(Lockstep.Game.EDir newValue) {
        var index = GameComponentsLookup.MoveRequest;
        var component = (Lockstep.ECS.Game.MoveRequestComponent)CreateComponent(index, typeof(Lockstep.ECS.Game.MoveRequestComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMoveRequest(Lockstep.Game.EDir newValue) {
        var index = GameComponentsLookup.MoveRequest;
        var component = (Lockstep.ECS.Game.MoveRequestComponent)CreateComponent(index, typeof(Lockstep.ECS.Game.MoveRequestComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveRequest() {
        RemoveComponent(GameComponentsLookup.MoveRequest);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveRequest;

    public static Entitas.IMatcher<GameEntity> MoveRequest {
        get {
            if (_matcherMoveRequest == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveRequest);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveRequest = matcher;
            }

            return _matcherMoveRequest;
        }
    }
}
